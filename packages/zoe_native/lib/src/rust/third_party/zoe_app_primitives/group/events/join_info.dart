// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../../frb_generated.dart';
import '../../../../lib.dart';
import '../../relay.dart';
import '../events.dart';
import 'key_info.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `clone`, `eq`, `fmt`
// These functions have error during generation (see debug logs or enable `stop_on_error: true` for more details): `add_relay`, `with_invitation_metadata`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GroupJoinInfo>>
abstract class GroupJoinInfo implements RustOpaqueInterface {
  /// Check if this invitation has any relay endpoints
  Future<bool> hasRelays();

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  /// Create new group join information
  static Future<GroupJoinInfo> newInstance({
    required String channelId,
    required GroupInfo groupInfo,
    required U8Array32 encryptionKey,
    required GroupKeyInfo keyInfo,
    required List<RelayEndpoint> relayEndpoints,
  }) =>
      RustLib.instance.api.zoeAppPrimitivesGroupEventsJoinInfoGroupJoinInfoNew(
        channelId: channelId,
        groupInfo: groupInfo,
        encryptionKey: encryptionKey,
        keyInfo: keyInfo,
        relayEndpoints: relayEndpoints,
      );

  /// Get the primary (first priority) relay endpoint
  Future<RelayEndpoint?> primaryRelay();

  /// Get all relay endpoints ordered by priority
  Future<void> relaysByPriority();
}
