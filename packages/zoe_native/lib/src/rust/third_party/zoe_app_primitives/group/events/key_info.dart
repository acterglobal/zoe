// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../../frb_generated.dart';
import '../../../zoe_wire_protocol/crypto.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `clone`, `eq`, `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<GroupKeyInfo>>
abstract class GroupKeyInfo implements RustOpaqueInterface {
  /// Get the algorithm name for this key info
  Future<void> algorithm();

  /// Get the derivation info if available
  Future<KeyDerivationInfo?> derivationInfo();

  /// Get the key ID for this key info
  Future<void> keyId();

  /// Check if this key info matches a given key ID
  Future<bool> matchesKeyId({required List<int> otherKeyId});

  /// Create a new ChaCha20-Poly1305 GroupKeyInfo
  static Future<GroupKeyInfo> newChacha20Poly1305({
    required List<int> keyId,
    required KeyDerivationInfo derivationInfo,
  }) => RustLib.instance.api
      .zoeAppPrimitivesGroupEventsKeyInfoGroupKeyInfoNewChacha20Poly1305(
        keyId: keyId,
        derivationInfo: derivationInfo,
      );
}
