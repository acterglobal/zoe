// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import '../../lib.dart';
import '../zoe_app_primitives/connection.dart';
import '../zoe_wire_protocol/keys.dart';
import 'client.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<SocketAddr> createSocketAddr({required String ip, required int port}) =>
    RustLib.instance.api.zoeClientFrbApiCreateSocketAddr(ip: ip, port: port);

Future<String> socketAddrToString({required SocketAddr addr}) =>
    RustLib.instance.api.zoeClientFrbApiSocketAddrToString(addr: addr);

Future<String> socketAddrIp({required SocketAddr addr}) =>
    RustLib.instance.api.zoeClientFrbApiSocketAddrIp(addr: addr);

Future<int> socketAddrPort({required SocketAddr addr}) =>
    RustLib.instance.api.zoeClientFrbApiSocketAddrPort(addr: addr);

Future<void> frbInit() => RustLib.instance.api.zoeClientFrbApiFrbInit();

Future<String> createSigningKeyRandom() =>
    RustLib.instance.api.zoeClientFrbApiCreateSigningKeyRandom();

Future<String> signingKeyFromHex({required String hex}) =>
    RustLib.instance.api.zoeClientFrbApiSigningKeyFromHex(hex: hex);

Future<String> signingKeyToVerifyingKey({required String signingKeyHex}) =>
    RustLib.instance.api.zoeClientFrbApiSigningKeyToVerifyingKey(
      signingKeyHex: signingKeyHex,
    );

Future<VerifyingKey> verifyingKeyFromHex({required String hex}) =>
    RustLib.instance.api.zoeClientFrbApiVerifyingKeyFromHex(hex: hex);

Future<bool> prepareClientForSystemsTest({
  required Client client,
  required String serverAddress,
  required String serverKeyHex,
}) => RustLib.instance.api.zoeClientFrbApiPrepareClientForSystemsTest(
  client: client,
  serverAddress: serverAddress,
  serverKeyHex: serverKeyHex,
);

Future<RelayAddress> createRelayAddressWithHostname({
  required String serverKeyHex,
  required String hostname,
}) => RustLib.instance.api.zoeClientFrbApiCreateRelayAddressWithHostname(
  serverKeyHex: serverKeyHex,
  hostname: hostname,
);
