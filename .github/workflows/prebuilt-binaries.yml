name: Build Precompiled Binaries

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.35.2'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  precompile-binaries:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux x64
            targets: 'x86_64-unknown-linux-gnu'
          - os: ubuntu-latest
            name: Android
            targets: 'aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android'
            setup_android: true
            build_args: '--android-sdk-location "$ANDROID_SDK_ROOT" --android-ndk-version "27.0.12077973" --android-min-sdk-version "21"'
          - os: macos-latest
            name: iOS
            targets: 'aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim'
          - os: macos-latest
            name: MacOS
            targets: 'x86_64-apple-darwin,aarch64-apple-darwin'
          - os: windows-latest
            name: Windows
            targets: 'x86_64-pc-windows-msvc'

    
    runs-on: ${{ matrix.os }}
    name: Prebuilts for ${{ matrix.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Free Disk Space (Ubuntu only)
        if: matrix.setup_android
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: false

      - name: Setup Java (Android builds only)
        if: matrix.setup_android
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Rust
        uses: acterglobal/zoe-relay/.github/actions/setup-rust-cross-platform@main
        with:
          targets: ${{ matrix.targets }}
          workspace_path: 'packages/zoe_native/rust'
          install_android_ndk: ${{ matrix.setup_android }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install cross-compilation dependencies (Ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-aarch64-linux-gnu \
            gcc-mingw-w64-x86-64 \
            gcc-mingw-w64-i686

      - name: Install Flutter dependencies
        working-directory: packages/zoe_native/
        run: flutter pub get

      - name: Install cargokit build tool dependencies
        working-directory: packages/zoe_native/cargokit/build_tool
        run: dart pub get

      - name: Run precompile binaries
        working-directory: packages/zoe_native
        env:
          PRIVATE_KEY: ${{ secrets.PREBUILTS_PRIVATE_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          dart cargokit/build_tool/bin/build_tool.dart precompile-binaries \
            --repository "acterglobal/zoe" \
            --manifest-dir "rust" \
            --target ${{ matrix.targets }} \
            ${{ matrix.build_args }}
