name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.35.2'
  RUST_VERSION: '1.85.0'

jobs:
  # Test and build for Android
  android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c
          add-to-path: false

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: |
            aarch64-linux-android
            armv7-linux-androideabi
            x86_64-linux-android
            i686-linux-android

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Rust dependencies
        run: |
          cd rust
          cargo fetch

      - name: Setup Android environment
        run: |
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV

      - name: Build for Android
        run: |
          flutter build apk --debug
          flutter build appbundle --debug

  # Test and build for iOS
  ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: |
            aarch64-apple-ios
            x86_64-apple-ios
            aarch64-apple-ios-sim

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Rust dependencies
        run: |
          cd rust
          cargo fetch

      - name: Build for iOS
        run: |
          flutter build ios --debug --no-codesign

  # Test and build for Linux
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            cmake \
            ninja-build \
            pkg-config \
            libgtk-3-dev \
            liblzma-dev \
            libstdc++-12-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-unknown-linux-gnu

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Rust dependencies
        run: |
          cd rust
          cargo fetch

      - name: Build for Linux
        run: |
          flutter build linux --debug

  # Test and build for macOS
  macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: |
            x86_64-apple-darwin
            aarch64-apple-darwin

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Rust dependencies
        run: |
          cd rust
          cargo fetch

      - name: Build for macOS
        run: |
          flutter build macos --debug

  # Test and build for Windows
  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-pc-windows-msvc

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Rust dependencies
        run: |
          cd rust
          cargo fetch

      - name: Build for Windows
        run: |
          flutter build windows --debug

  # Run tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Rust dependencies
        run: |
          cd rust
          cargo fetch

      - name: Run Rust tests
        run: |
          cd rust
          cargo test

      - name: Run Flutter tests
        run: flutter test

      - name: Run Flutter analyze
        run: flutter analyze

  # Check code formatting
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Check Rust formatting
        run: |
          cd rust
          cargo fmt --check

      - name: Check Dart formatting
        run: dart format --set-exit-if-changed .

  # Test zoe_native plugin - comprehensive testing for the native FFI plugin
  # This job tests the zoe_native plugin independently to ensure it builds,
  # passes all tests, and follows code quality standards
  zoe_native_plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            cmake \
            ninja-build \
            pkg-config \
            libgtk-3-dev \
            liblzma-dev \
            libstdc++-12-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-unknown-linux-gnu

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: packages/zoe_native/rust

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Install zoe_native plugin dependencies
        run: |
          cd packages/zoe_native
          flutter pub get

      - name: Install Rust dependencies for zoe_native
        run: |
          cd packages/zoe_native/rust
          cargo fetch

      - name: Run zoe_native Rust tests
        run: |
          cd packages/zoe_native/rust
          cargo test

      - name: Run zoe_native Flutter tests
        run: |
          cd packages/zoe_native
          flutter test

      - name: Run zoe_native Flutter analyze
        run: |
          cd packages/zoe_native
          flutter analyze

      - name: Build zoe_native Rust library
        run: |
          cd packages/zoe_native/rust
          cargo build

      - name: Check zoe_native Rust formatting
        run: |
          cd packages/zoe_native/rust
          cargo fmt --check

      - name: Check zoe_native Dart formatting
        run: |
          cd packages/zoe_native
          dart format --set-exit-if-changed .